openapi: 3.0.0
info:
  version: "1.0.0"
  title: Sample Flask API
  description: A simple API to demonstrate CRUD operations
servers:
  - url: http://localhost:80
    description: Local development server
paths:
  /api:
    get:
      summary: Get welcome message
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Hello from the API!
  /api/items:
    get:
      summary: Get all items
      responses:
        200:
          description: A list of items
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
    post:
      summary: Create a new item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Item created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  item:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
  /api/items/{item_id}:
    get:
      summary: Get item by ID
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Item details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
        404:
          description: Item not found
    put:
      summary: Update item by ID
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        200:
          description: Item updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  item:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
        404:
          description: Item not found
    delete:
      summary: Delete item by ID
      parameters:
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Item deleted
        404:
          description: Item not found
components:
  schemas:
    Item:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
