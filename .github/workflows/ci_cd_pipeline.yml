name: CI/CD Pipeline with Security

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Checkout the code
  checkout:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

  # Step 2: Secret Scanning using TruffleHog
#  secret-scan:
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#
#    - name: Secret Scan using TruffleHog
#      uses: trufflesecurity/trufflehog@v3
#      with:
#        repo_path: "."

  # Step 4: Build Docker Image
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
        docker build -t imperva-demo-py-api:latest .

  # Step 5: Docker Image Vulnerability Scan using Trivy
  scan-docker-image:
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: docker build -t imperva-demo-py-api:latest .

    - name: Trivy Docker Image Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "imperva-demo-py-api:latest"

  # Step 6: Push Docker Image to DockerHub
  push-docker-image:
    runs-on: ubuntu-latest
    needs: scan-docker-image
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to DockerHub
      id: docker-hub
      env:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}
      run: |
        docker login -u $username -p $password 

    - name: Build and tag Docker image
      run: |
        docker build -t imperva-demo-py-api:latest .

    - name: Push Docker image to DockerHub
      run: docker push ${{secrets.DOCKERHUB_USERNAME}}/imperva-demo-py-api:latest
